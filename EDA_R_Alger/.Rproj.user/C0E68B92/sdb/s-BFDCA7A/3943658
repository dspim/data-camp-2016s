{
    "collab_server" : "",
    "contents" : "---\ntitle: \"EDA with R\"\nsubtitle: Data Visualization with **ggplot** & **dplyr**\nauthor: \"Chung Fu,Yang\"\ndate: '`r Sys.Date()`'\n# subtitle:\"EDA toturial with R\"\noutput:\n  ioslides_presentation:\n    css: css/dsp.css\n    # logo: assets/img/Taiwan-R-logo.png\n    widescreen: yes\n    self_contained: false\n---\n\n```{r ,echo=FALSE,warning=FALSE,message=F}\noptions('scipen'=100,'digits'=2)\nknitr::opts_chunk$set(comment=\"\",prompt=F,strip.white=F,warning=FALSE,message=F,echo=F,comment=\"\")\nlibrary(dplyr)\nlibrary(dygraphs)\nlibrary(ggplot2)\nlibrary(ggmap)\nlibrary(data.table)\nlibrary(devtools)\nlibrary(plotly)\nlibrary(xtable)\nlibrary(rCharts)\nlibrary(tidyr)\nlibrary(DT)\nlibrary(RColorBrewer)\n###############\n  multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {\n    library(grid)\n    \n    # Make a list from the ... arguments and plotlist\n    plots <- c(list(...), plotlist)\n    \n    numPlots = length(plots)\n    \n    # If layout is NULL, then use 'cols' to determine layout\n    if (is.null(layout)) {\n      # Make the panel\n      # ncol: Number of columns of plots\n      # nrow: Number of rows needed, calculated from # of cols\n      layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),\n                       ncol = cols, nrow = ceiling(numPlots/cols))\n    }\n    \n    if (numPlots==1) {\n      print(plots[[1]])\n      \n    } else {\n      # Set up the page\n      grid.newpage()\n      pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))\n      \n      # Make each plot, in the correct location\n      for (i in 1:numPlots) {\n        # Get the i,j matrix positions of the regions that contain this subplot\n        matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))\n        \n        print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,\n                                        layout.pos.col = matchidx$col))\n      }\n    }\n  }\nubike <- read.csv('ubikebyhourutf8/ubike-hour-201502-utf8.csv') \ntemp <- read.csv(\"歷年護理人員資料.csv\")  #請輸入正確的檔案路徑\n```\n\n# Speaker\n\n## About me \n\n<center>\n<img src=\"img/lofu.jpg\" width=\"350px\" align='right'></img>\n</center>\n\n\n\n- ### Alger Yang, M.S,政大統計所碩二\n- 角色：\n    - 資料分析**屍**\n    - 資料視覺化愛好者\n    - 健保資料庫的掃地工人(資料清理...)\n- 常用工具：\n    - R、SQL、SPSS\n- 目前工作：\n    - DSP講師\n    - 健保資料庫資料分析\n    - 政大風管所法律組量化資料分析研究助理\n\n\n# 課程綱要\n\n## Agenda \n\n>- Data Visualization\n>- ggplot in R\n    - 介紹\n    - 架構\n    - 起手式(基本語法)\n    - 應用(各種圖形的呈現)\n        + Line\n        + Bar\n        + Histogram\n        + point\n    - 進階技巧傳承篇\n>- 互動視覺化plotly\n\n## Data Visualization\n\n- 清晰有效地傳達與溝通訊息\n- 教學、研究、宣傳、\n- 美學、功能兼顧\n- 統計圖形、訊息可視化\n- 參考Johnson於DSHC meetp的[DataViz 介紹](http://goo.gl/xYorRm)\n- Bonus from Alger[Highchart Introduction](http://rpubs.com/lofuyang/167269)\n\n## ggplot2簡介\n\n- 2015年，最受歡迎的R套件之一\n- R環境下的繪圖套件\n- 取自 “The Grammar of Graphics” (Leland Wilkinson, 2005)\n- [設計理念](https://github.com/cosname/ggplot2-translation/blob/master/preface.md)\n    - 採用圖層系統\n    - 用抽象的概念來控制圖形，避免細節繁瑣\n    - 圖形美觀\n- [最受歡迎的視覺視套件](https://plot.ly/357/%7ELofu/)\n\n## The Anatomy of a Plot \n\n<center>\n<img src='./img/anatomy.png' width=750 align='center'></img>\n</center>\n\n## ggplot2基本架構\n\n- 資料 (data) 和映射 (mapping)\n- 幾何對象 (`geom`etric)\n- 座標尺度 (`scale`)\n- 統計轉換 (`stat`istics)\n- 座標系統 (`coord`inante)\n- 圖層 (layer)\n- 刻面 (`facet`)\n- 主題 (`theme`)\n\n## ggplot2 基本語法 \n\n```{r echo=TRUE, eval=FALSE}\nggplot(data=..., aes(x=..., y=...)) + geom_xxx(...) +\n  stat_xxx(...) + facet_xxx(...) + ...\n```\n\n- `ggplot` 描述 data 從哪來\n- `aes` 描述圖上的元素跟 data 之類的對應關係\n- `geom_xxx` 描述要畫圖的類型及相關調整的參數\n- 常用的類型諸如：`geom_bar`, `geom_points`, `geom_line`, `geom_polygon`\n\n## 馬上來個範例 {data-background=\"a.jpeg\"}\n\n```{r echo=TRUE,fig.width=6,fig.height=3,fig.align='center'}\ndata <- data.frame(學校 = c(\"輔大\",\"東吳\",\"世新\",\"清華\"), 每百人正妹數 = c(33,24,40,5))\n#隨便定義一個資料表\nggplot(data = data, aes(x = 學校, y = 每百人正妹數)) + geom_bar(stat = \"identity\") +\n  theme_grey(base_family = \"STHeiti\") \n```\n\n## 首先請先安裝以下套件 {.smaller}\n\n```{r echo=TRUE, eval=FALSE}\n#install.packages(c(\"ggplot2\",\"data.table\",\"dplyr\",\"reshape2\"),repos=\"http://cran.csie.ntu.edu.tw/\")\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(reshape2)\nlibrary(data.table)\n```\n\n<div class=\"blue2\">\n>-  ![](sheng.jpg)：巧虎，為什麼還要安裝`dplyr`還有`reshape2`呢？\n</div>\n<div class=\"green2\">\n>-  ![](lofu1.jpg)：因為在進行資料視覺化的時候，一定會經過資料得清理與萃取，得到一個`dataframe`後，才會進行畫圖，所以其實資料整理是很重要的！！\n</div>\n<div class=\"black\">\n>-  ![](sheng.jpg)：原來如此呀，難怪你自稱健保資料庫掃地工人～\n</div>\n\n## 進行資料分析前，總要先有資料吧！？ \n\n```{r eval=FALSE, echo=TRUE}\n# 瞭解現在我們所處在的路徑\ngetwd()\n# 設定我們檔案存放的路徑\nsetwd() \n# 讀檔起手式\ntemp <- read.csv(\"歷年護理人員資料.csv\")  #請輸入正確的檔案路徑\n# 若讀入的是亂碼，試試以下\ntemp <- read.csv(\"歷年護理人員資料.csv\",fileEncoding = 'big5')  #如果你是mac\n# 或是\ntemp <- read.csv(\"歷年護理人員資料.csv\",fileEncoding = 'utf-8') #如果你是windows\n```\n\n<center>\n<img src='./img/螺旋丸-1.jpg' width=400 heigh=350 align='center'></img>\n</center>\n\n## 以為開始了嗎？\n\n- 進行分析前，我們必須去了解資料的型態與特性\n\n```{r echo=TRUE}\nstr(temp)\n```\n\n## 身為資料分析師，一定要有的好習慣！\n\n- 暸解基本的個變數統計量值\n\n```{r echo=TRUE}\nsummary(temp)\n```\n\n## 資料介紹\n\n```{r echo = FALSE,fig.height=3, warning=FALSE, fig.align='center', message=FALSE, results='asis'}\ntemp %>% sample_n(7,replace = TRUE) %>% xtable() %>% print(type='html') \n```\n\n## 欄位說明\n\n- 性別：M：男生，F：女生\n- 醫療層級：1：醫學中心，2：區域醫院，3：地區醫院，4：基層院所\n- 縣市：台灣22個縣市\n- 年齡：台灣護理人員的年齡\n- 年度：第幾年的資料\n- 人數：護理人員的人數\n- 敘述：\n    + 這個資料表由健保資料庫的歷年醫事人員基本資料檔轉換而得，並非常見的原始資料檔。\n\n# 量化 v.s. 量化：Line Chart\n\n## Line chart \n\n- `geom_line`\n\n- 首先來看看2008年各個年齡層的護理師人數吧！\n\n- 是不是發現護理師主要都集中在某個年齡層呢？？\n\n```{r echo = TRUE,fig.height=2, warning=FALSE, fig.align='center', message=FALSE}\ntemp_age <- temp %>% \n  filter(年度 == \"2008\") %>% #挑出年度為2008年\n  group_by(年齡) %>% #根據年齡分群\n  summarise(護理師_人數 = sum(人數)) #計算總人數 \n# 資料整理可以直接複製貼上\nthm <- function() theme(text=element_text(size = 15, family = \"STHeiti\")) # 控制字體與大小\n# STHeiti是只有Mac才有的字體, 用來解決Mac系統中文顯示錯誤的問題\n# Windows系統的使用者請忽略 `+ thm()` 指令\n## Line chart\n```\n\n## Line chart \n\n```{r echo = TRUE,warning=FALSE,fig.height=3.5,fig.align='center', message=FALSE}\n## 可以與第10頁做簡單的對照\nggplot(temp_age,aes(x = 年齡, y = 護理師_人數))+geom_line()+thm()\n```\n\n## Line chart and Scatter plot \n\n- 歷年的醫護人員是不是逐年的再增加呢？\n\n```{r echo = TRUE,fig.height=3, warning=FALSE, fig.align='center', message=FALSE}\ntemp_year <- temp  %>% \n  group_by(年度) %>% #根據年度分群\n  summarise(護理師_人數 = sum(人數)) #計算總人數\n# 資料整理可以直接複製貼上\n```\n\n## Line chart and Scatter plot\n\n```{r echo = TRUE,fig.height=3.3,warning=FALSE, fig.align='center', message=FALSE}\nggplot(temp_year,aes(x = 年度 , y = 護理師_人數)) +\n  geom_line(size = 2) + geom_point(size = 5) + # 控制點與線的大小粗細\n  thm() + labs(titles = \"各年度護理人員數\", x = \"年度\", y = \"護理師人數\") # lab用來幫圖形的標題、x軸與y軸做命名\n```\n\n\n## How to plot multiple lines? \n\n- 比較高雄市、台中市、台南市，中南部的直轄市，歷年的護理人員數是否有差異？\n- 寬資料轉長資料(Wide format to long format)\n\n\n```{r echo = TRUE,fig.height=2.5, warning=FALSE, fig.align='center', message=FALSE}\ntemp_t <- read.csv(\"我是寬資料.csv\",header=T)\ntemp_long <- temp_t %>% melt(id='year') #id是將保留的欄位名稱\ncolnames(temp_long) <- c('年度','地區','人數')\n```\n\n## 轉換結果\n\n<center>\n<img src='./img/wll.jpg' width=800 align='center'></img>\n</center>\n\n## Multiple line 出來吧！！！\n\n```{r echo = TRUE,fig.height=3, warning=FALSE, fig.align='center', message=FALSE}\n# gruop按照不同區域劃線\nggplot(temp_long, aes(x = 年度, y = 人數 , group = 地區, color = 地區)) + \n  geom_line() + \n  geom_point() + thm() +\n  labs(titles=\"歷年台南市、高雄市、台中市護理師人數差異\",x=\"年度\",y=\"護理師人數\") +\n  theme(axis.text.x = element_text(angle = 30, hjust = 1)) # 控制x軸字體傾斜程度\n```\n\n## 小挑戰\n\n- 試著畫出歷年男性護理師的人數趨勢？\n- 如下圖\n\n```{r echo = FALSE,fig.height=4, warning=FALSE, fig.align='center', message=FALSE}\n## 資料整理\ntemp_t <- temp  %>% \n          filter(性別==\"M\") %>% #挑出男性\n          group_by(年度) %>% #根據年度分群\n          summarise(護理師_人數 = sum(人數)) #計算總人數\n## 繪圖\nggplot(temp_t,aes(x = 年度 , y = 護理師_人數)) +\n  geom_line(size = 0.5) + geom_point(size = 1)+ # 控制點與線的大小粗細\n  thm()+labs(titles = \"各年度男性護理人員數\" , x = \"年度\" , y = \"護理師人數\")\n```\n\n## 解答來囉！！\n\n- 良好的註解與排列習慣，會讓你編輯程式更有效率！\n\n```{r echo=TRUE,eval=FALSE}\n## 資料整理\ntemp_t <- temp  %>% \n          filter(性別==\"M\") %>% #挑出男性\n          group_by(年度) %>% #根據年度分群\n          summarise(護理師_人數 = sum(人數)) #計算總人數\n## 繪圖\nggplot(temp_t,aes(x = 年度 , y = 護理師_人數)) +\n  geom_line(size = 0.5) + geom_point(size = 1)+ # 控制點與線的大小粗細\n  thm()+labs(titles = \"各年度男性護理人員數\" , x = \"年度\" , y = \"護理師人數\")\n```\n\n## 質化 v.s. 量化：Bar Chart \n\n- 以2008年來說，不同的醫療層級，護理人員的分佈狀況如何呢？\n\n```{r echo = TRUE,eval=FALSE,fig.height=3, warning=FALSE, fig.align='center', message=FALSE}\n#資料整理\ntemp_hosp <- temp %>% \n  filter(年度 == \"2008\") %>% #選擇年度2008\n  group_by(年度,醫療層級) %>% #對年度與醫療層級分群\n  summarise(護理師_人數 = sum(人數)) \n#畫圖\nggplot(temp_hosp,aes(x = 醫療層級, y = 護理師_人數)) +\n  geom_bar(stat = 'identity') + thm()# stat='identity'以表格的值做為bar的高度\n```\n\n## Bar Chart \n\n```{r echo = FALSE}\n#資料整理\ntemp_hosp = temp %>% \n  filter(年度==\"2008\") %>% #選擇年度2008\n  group_by(年度,醫療層級) %>% #對年度與醫療層級分群\n  summarise(護理師_人數=sum(人數)) \nggplot(temp_hosp,aes(x=醫療層級, y=護理師_人數))+\n  geom_bar(stat='identity')+thm()# stat='identity'以表格的值做為bar的高度\n```\n\n## Bar Chart \n\n- 如何控制長條圖的排序呢？有兩種比較簡單的方式。\n- 手動修改levels\n\n```{r echo = TRUE}\nclass(temp_hosp$醫療層級) #看看這個變數的屬性類型\n# 發現他是integer的屬性，所以我們要將其轉成factor來改變他的順序\ntemp_hosp$醫療層級 <- factor(temp_hosp$醫療層級,levels = c(\"醫學中心\",\"區域醫院\",\"地區醫院\",\"基層院所\"))\n```\n\n- 利用`arrange`事先依照y軸對應的數值的大小來排序\n\n```{r echo = TRUE}\n# 我們也可以在一開始先對資料排序完在畫圖\ntemp_hosp <- temp_hosp %>% arrange(護理師_人數) \n# 此時在接上畫圖的code就會自動排序囉！\n```\n\n## 小挑戰！？請將資料整理如下：\n\n```{r echo = FALSE,fig.height=3, warning=FALSE, fig.align='center', message=FALSE, results='asis'}\n# 資料整理大挑戰～～～\ntemp_bar = temp %>% \n  filter(年度 == \"2008\") %>% \n  group_by(性別,醫療層級) %>% \n  summarise(護理師_人數 = sum(人數))\ntemp_bar %>% slice(1:4) %>% \n  mutate(比例=round(護理師_人數/sum(護理師_人數),3)) %>% \n  bind_rows(temp_bar %>% slice(5:8) %>% \n  mutate(比例=round(護理師_人數/sum(護理師_人數),3))) -> temp_MF\nxtable(temp_MF) %>% print(type=\"html\")\n```\n\n## 解答code\n\n```{r echo = TRUE,fig.height=3, warning=FALSE, fig.align='center', message=FALSE, results='asis'}\n# 資料整理大挑戰～～～\ntemp_MF <- temp %>% \n           group_by(性別,醫療層級) %>% \n           summarise(護理師人數 = sum(人數)) %>% \n           mutate(百分比 = round(護理師人數/sum(護理師人數),2))\n```\n\n\n```{r echo = FALSE,eval=FALSE}\ntemp_MF$醫療層級 = factor(temp_hosp$醫療層級,levels = c(\"醫學中心\",\"區域醫院\",\"地區醫院\",\"基層院所\"))\n```\n\n\n## 兩種類別.stack\n\n```{r echo = TRUE,fig.height=3.5, warning=FALSE,fig.align='center', message=FALSE}\nggplot(temp_MF,aes(x = 性別, y = 百分比 , fill = 醫療層級)) + \n  geom_bar(stat = 'identity', position = 'stack') + thm()\n```\n\n## 兩種類別.dodge\n\n```{r echo = TRUE,fig.height=3.5, warning=FALSE, fig.align='center', message=FALSE}\nggplot(temp_MF,aes(x = 性別, y = 百分比 , fill = 醫療層級 )) + \n  geom_bar(stat = 'identity' , position = 'dodge') + thm()\n```\n\n## 圖形思考？\n\n### stack與dodge之間的差異？\n\n```{r fig.align='center',echo = FALSE}\na = ggplot(temp_MF,aes(x = 性別 , y = 百分比 , fill = 醫療層級)) + \n  geom_bar(stat = 'identity', position = 'stack') + thm() \nb = ggplot(temp_MF,aes(x = 性別, y = 百分比 , fill = 醫療層級 )) + \n  geom_bar(stat = 'identity' , position = 'dodge') + thm()\nmultiplot(a,b,cols = 1)\n```\n\n## 資料讀檔與下載\n\n[YouBike-Weather Data](http://goo.gl/8itFhs)\n\n```{r eval=FALSE, echo=TRUE}\n# 讀檔起手式\nubike <- read.csv('ubikebyhourutf8/ubike-hour-201502-utf8.csv') #請輸入正確的檔案路徑\n# 讀檔進階招式\n#ubike <- read.csv('檔案路徑', \n#          colClasses = c(\"factor\",\"integer\",\"integer\",\"factor\",\"factor\",\n#                         \"numeric\",\"numeric\",\"integer\",\"numeric\",\"integer\",\n#                         \"integer\",\"numeric\",\"numeric\", \"integer\",\"integer\",\n#                         \"numeric\",\"numeric\",\"numeric\", \"numeric\",\"numeric\",\n#                         \"numeric\"))\n# 讀檔大絕招\n#ubike <- fread('檔案路徑',\n#          data.table = FALSE,\n#          colClasses = c(\"factor\",\"integer\",\"integer\",\"factor\",\n#                       \"factor\",\"numeric\", \"numeric\", \"integer\",\n#                        \"numeric\", \"integer\",\"integer\",\"numeric\",\n#                        \"numeric\", \"integer\",\"integer\",\"numeric\",\n#                        \"numeric\",\"numeric\", \"numeric\",\"numeric\",\n#                        \"numeric\"))\n```\n\n## 展示資料\n\n```{r}\nhead(ubike)\n```\n\n## 欄位說明\n<pre>\n   name.eng   name.cht        name.eng     name.cht\n1      date       日期   12    std.sbi 車輛數標準差\n2      hour       時間   13   avg.bemp   平均空位數\n3       sno   場站代號   14   max.bemp   最大空位數\n4     sarea   場站區域   15   min.bemp   最小空位數\n5       sna   場站名稱   16   std.bemp 空位數標準差\n6       lat       緯度   17       temp     平均氣溫\n7       lng       經度   18   humidity         溼度\n8       tot   總停車格   19   pressure         氣壓\n9   avg.sbi 平均車輛數   20  max.anemo     最大風速\n10  max.sbi 最大車輛數   21   rainfall       降雨量\n11  min.sbi 最小車輛數               \n</pre>\n\n## 單一數值：Histogram\n\n- `geom_histogram`\n\n```{r echo = TRUE,fig.height=3, warning=FALSE, fig.align='center', message=FALSE, results='asis'}\nggplot(ubike) +\n  geom_histogram(aes(x = max.anemo, y =..count..)) + thm()\n```\n\n## Histogram\n\n- `aes(y=..count..)` vs. `aes(y=..density..)`\n\n```{r echo = TRUE,fig.height=3, warning=FALSE, fig.align='center', message=FALSE, results='asis'}\nggplot(ubike) +\n  geom_histogram(aes(x = max.anemo , y =..density..)) + thm()\n```\n\n## Histogram\n- `aes(x=..., y=..., fill=...)`\n```{r echo = TRUE,fig.height=3, warning=FALSE, fig.align='center', message=FALSE, results='asis'}\nggplot(ubike) +\n  geom_histogram(aes(x = max.anemo, y =..density.., fill =..count..)) + thm()\n```\n\n## Histogram + Density\n\n- `geom_histogram() + geom_density()`\n\n```{r echo = TRUE,fig.height=3, warning=FALSE, fig.align='center', message=FALSE, results='asis'}\nggplot(ubike, aes(x = max.anemo)) +\n  geom_histogram(aes(y =..density.., fill =..count..)) +\n  geom_density() + thm()\n```\n\n# 量化 v.s. 量化：Scatter Plot\n\n## 繪圖之前的整理資料\n\n- 文山區各站點在\"2015-02\"的平均溼度 vs. 平均雨量\n\n```{r results= 'asis'}\nx3 <- filter(ubike, grepl(\"2015-02\", date, fixed = TRUE), sarea == \"文山區\") %>%\n  group_by(sna) %>% \n  summarise(rain.avg = mean(rainfall), hum.avg = mean(humidity))\nx3 %>% xtable() %>% print(type='html')\n```\n\n## Scatter plot\n\n- `geom_point()`\n\n- 參數`size`放在`aes()`函數外面，表示所有的資料固定用相同的size\n\n```{r echo = TRUE,fig.height=2, warning=FALSE, fig.align='center', message=FALSE, results='asis'}\nggplot(x3) +\n  geom_point(aes(x = rain.avg, y = hum.avg), size=5) + #size控制點的大小\n  thm()\n```\n\n## Grouped scatter plot\n\n```{r echo = TRUE,eval=FALSE,fig.height=3, warning=FALSE, fig.align='center', message=FALSE, results='asis'}\nggplot(x3) +\n  # aes裡的 colour 和 size 可依資料調整顏色和大小, 使用 scale_size() 控制資料\n  geom_point(aes(x = rain.avg, y = hum.avg, colour=sna, size=rain.avg)) +\n  scale_size(range=c(5,10)) +  \n  thm()\n```\n\n## \n\n```{r echo = FALSE, warning=FALSE, fig.align='center', message=FALSE,fig.height=6}\nggplot(x3) +\n  # aes裡的 colour 和 size 可依資料調整顏色和大小, 使用 scale_size() 控制資料\n  geom_point(aes(x = rain.avg, y = hum.avg, colour = sna, size = rain.avg)) +\n  scale_size(range = c(5,10)) +  \n  thm()\n```\n\n# 進階技巧傳承篇\n\n## `stat`istics\n\n```{r echo = TRUE,fig.height=3, warning=FALSE, fig.align='center', message=FALSE}\ntemp_age <- temp %>%  \n  filter(年度 == \"2008\") %>% # 挑出2008年度\n  group_by(年齡) %>%  # 根據年齡分群\n  summarise(count = sum(人數)) #計算人數\nggplot(temp_age,aes(x = 年齡, y = count)) +\n  geom_point() + stat_smooth()+thm()\n```\n\n## facet\n\n- 資料整理\n\n```{r echo = TRUE}\ntemp_facet <- temp %>% \n  filter(年度 == \"2012\") %>% \n  filter(醫療層級 == \"地區醫院\"|醫療層級==\"基層院所\") %>% \n  group_by(醫療層級,縣市) %>% #選擇年度、醫療層級、縣市作為分群\n  summarise(total = sum(人數)) # 計算分裙下的總人數\n```\n\n## facet \n\n- theme(axis.text.x = element_text(angle = 90, hjust = 1))  #控制字的方向\n\n- coord_flip()\n\n```{r echo = TRUE, message=FALSE,eval=FALSE}\nggplot(temp_facet,aes(x = 縣市, y = total,fill = 醫療層級 ))+\n  geom_bar(stat='identity') +\n  thm() +\n  facet_wrap( ~ 醫療層級, nrow = 2)\n```\n\n## 有沒有發現怪怪der？？？\n\n```{r echo = FALSE, message=FALSE,fig.width=10,warning=FALSE, fig.align='center'}\nggplot(temp_facet,aes(x = 縣市, y = total,fill = 醫療層級))+\n  geom_bar(stat='identity') +\n  thm() +\n  facet_wrap( ~ 醫療層級, nrow = 2)\n```\n\n## 更動字的方向\n\n```{r echo = TRUE, message=FALSE,fig.width=10,warning=FALSE,fig.height=3.5 ,fig.align='center'}\nggplot(temp_facet,aes(x = 縣市, y = total,fill = 醫療層級))+\n  geom_bar(stat='identity') +\n  thm() +\n  facet_wrap( ~ 醫療層級, nrow = 2) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))  #控制字的方向\n```\n\n## coord_flip()\n\n```{r echo = TRUE,eval=FALSE,fig.width=10,fig.height=3,warning=FALSE, fig.align='center', message=FALSE}\nggplot(temp_facet,aes(x = 縣市, y = total, fill = 醫療層級)) +\n  geom_bar(stat = 'identity') +\n  thm() +\n  facet_wrap(~醫療層級, ncol = 2) + coord_flip() +\n  labs(titles=\"2012年各醫療層級各縣市護理師數\",x = \"縣市\",y = \"護理師人數\")\n```\n\n## coord_flip()\n\n```{r echo = FALSE,fig.width=10,warning=FALSE, fig.align='center', message=FALSE}\nggplot(temp_facet,aes(x = 縣市, y = total, fill = 醫療層級))+\n  geom_bar(stat = 'identity') +\n  thm() +\n  facet_wrap(~醫療層級, ncol = 2) + coord_flip() +\n  labs(titles=\"2012年各醫療層級各縣市護理師數\",x = \"縣市\",y = \"護理師人數\")\n```\n\n\n## 圖形輸出\n- 利用RStudio UI介面存擋\n- 命立列輸出\n- 畫完圖之後，再存檔~~\n\n```{r echo=TRUE,eval=FALSE}\nggsave('檔案名稱')\nggsave(\"mtcars.pdf\", width = 4, height = 4)\nggsave(\"mtcars.png\", width = 4, height = 4, dpi = 300)\n```\n\n# 當你學了螺旋丸，你一定想讓他變螺旋手裡劍！\n\n## 傳說中的`Plotly`\n\n- Plotly是一個資料視覺化的R套件，以簡單的方式，讓資料能夠產生互動的效果。\n- 提供一個合作平台，使用者能夠將自己在R中繪製的圖存上屬於自己的Plotly平台上。\n- [Plotly官方網站](https://plot.ly/)\n- 結合了各式各樣的API，包裝`Python`、`R`、`Malab`、...等等\n\n>- 當然～ggplot2也能夠輕易地使用plotly轉換成互動式的圖表！！\n\n## 套件安裝\n\n- 直接從`CRAN`內下載就好囉！！\n\n```{r echo=TRUE,eval=FALSE}\n# Plotly is now on CRAN!\ninstall.packages(\"plotly\")\n# install the latest development version (on GitHub) via devtools\n```\n\n- `或是`從`github`上下載，但前提是`先`安裝`devtools`\n\n```{r echo=TRUE,eval=FALSE}\n# install.packages(\"devtools\")\ndevtools::install_github(\"ropensci/plotly\")\n```\n\n## BarDemo(step1)\n\n- 2012年各縣市的護理師人數呈現什麼趨勢呢？縣市之間差異很大嗎？\n\n- 資料整理\n\n```{r echo = TRUE}\ntemp_plot <- temp %>%  \n  filter(年度 == \"2012\") %>% \n  group_by(縣市) %>% \n  summarise(total = sum(人數))\n```\n\n## BarDemo(step2) \n\n- 先用ggplot2畫出\n\n```{r echo = TRUE,fig.width=10,fig.height=3,fig.align='center',eval=TRUE}\nggplot(temp_plot,aes(x = 縣市, y = total,fill = 縣市))+\n  geom_bar(stat = 'identity')+\n  thm()+\n  labs(titles = \"2012年各縣市護理師數\", x = \"縣市\",y = \"護理師人數\")+coord_flip()\n```\n\n## BarDemo(step3)\n\n- 首先先將剛剛的圖存入一個物件\n\n```{r echo = TRUE,fig.width=13,fig.align='center',eval=TRUE}\na <- ggplot(temp_plot,aes(x = 縣市, y = total ,fill = 縣市))+\n     geom_bar(stat = 'identity')+\n     thm()+\n     labs(titles = \"2012年各縣市護理師數\",x = \"縣市\", y = \"護理師人數\")+coord_flip()\n```\n\n## BarDemo(step4)\n\n```{r echo = TRUE,fig.width=9,fig.height=5,warning=FALSE, fig.align='center'}\nggplotly(a)\n```\n\n## lineDemo(step1)\n\n- 2005年～2012年高雄市與台南市的護理人員人數是否有明顯的變化？\n\n\n```{r echo = TRUE,fig.width=10,fig.height=3,fig.align='center',eval=TRUE}\n## \ntemp_plot <- temp %>% \n             filter(縣市 == \"台南市\"|縣市 == \"高雄市\") %>% \n             group_by(年度,縣市) %>% \n             summarise(護理人員數=sum(人數)) \n```\n\n## lineDemo(step2)\n\n```{r echo = TRUE,fig.width=10,fig.height=3,fig.align='center',eval=TRUE}\na <- ggplot(temp_plot,aes(x = 年度,y = 護理人員數,group = 縣市,color = 縣市))+\n    geom_line() +  \n    thm()+\n    labs(titles = \"高雄市與台南市歷年護理師人數\",x = \"年度\",y = \"護理師人數\")+\n    theme(axis.text.x = element_text(angle = 30, hjust = 1))# 控制x軸字體傾斜程度\na\n```\n\n## lineDemo(step3) \n\n```{r echo = TRUE,fig.width=10,fig.height=4,fig.align='center',eval=TRUE}\nggplotly(a)\n```\n\n## PointDemo(step1)\n\n- 回到ubike資料，畫畫看信義區與大安區的max.anemo(最大風速)與temp(平均氣溫)是不是有關係呢？\n\n```{r echo = TRUE}\nubike_temp <- ubike %>% \n              filter(sarea == \"信義區\"|sarea == \"大安區\") \n```\n\n## PointDemo(step2)\n\n- \n\n```{r echo = TRUE,fig.width=10,fig.height=3,fig.align='center',eval=TRUE}\na <- ggplot(ubike_temp) +\n  # aes裡的 colour 和 size 可依資料調整顏色和大小, 使用 scale_size() 控制資料\n    geom_point(aes(x = max.anemo , y = temp, colour = sarea),size = 0.1)+\n    thm()\na\n```\n\n## PointDemo(step3)\n\n```{r echo = TRUE,fig.width=10,fig.height=5,fig.align='center',eval=TRUE}\nggplotly(a)\n```\n\n## 學習資源\n\n- [ggplot2 cheat sheet from RStudioInc.](http://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf)\n\n- [ggplot2 官方文件](http://docs.ggplot2.org/current/index.html)\n\n- [Rcpolorbrewer調色盤](http://docs.ggplot2.org/current/scale_brewer.html)\n\n- [Rcpolorbrewer調色盤-官方教材](https://cran.r-project.org/web/packages/RColorBrewer/RColorBrewer.pdf)\n\n\n## 掌握心法後，如何自行利用R解決問題\n\n- 了解自己的需求\n    - 多多交流\n        - [Taiwan R User Group](http://www.meetup.com/Taiwan-R)，mailing list: <Taiwan-useR-Group-list@meetup.com>\n        - ptt R_Language版\n        - [R軟體使用者論壇](https://groups.google.com/forum/#!forum/taiwanruser)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1465011128208.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4075053863",
    "id" : "3943658",
    "lastKnownWriteTime" : 1466574182,
    "last_content_update" : 1466574182161,
    "path" : "/Volumes/SD-Lofu/dsp/EDAdsp/EDA-R-gh-pages/index.Rmd",
    "project_path" : "index.Rmd",
    "properties" : {
        "source_window_id" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}