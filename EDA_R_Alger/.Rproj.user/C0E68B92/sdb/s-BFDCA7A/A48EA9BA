{
    "collab_server" : "",
    "contents" : "---\ntitle       : EDA with R\nsubtitle    : Data Visualization with ggplot\nauthor      : Ben Chen, Johnson Hsieh\njob         : \nframework   : io2012-dsp\nhighlighter : highlight.js\nhitheme     : zenburn\nwidgets     : [mathjax]            # {mathjax, quiz, bootstrap}\nmode        : selfcontained # {standalone, draft}\nknit        : slidify::knit2slides\n---\n## The Anatomy of a Plot \n<center>\n<img src='./img/anatomy.png' width=900 align='center'></img>\n</center>\n\n--- .largecontent\n## Data Visualization \n\n- 清晰有效地傳達與溝通訊息\n- 教學、研究、宣傳\n- 美學、功能兼顧\n- 統計圖形、訊息可視化\n- 參考Johnson於DSHC meetp的[DataViz 介紹](http://goo.gl/xYorRm)\n\n```{r setup, include=FALSE, cache=FALSE}\nsuppressPackageStartupMessages({\n  library(knitr)\n  library(ggplot2)\n  library(xtable)\n  library(magrittr)\n  library(data.table)\n  library(dplyr)\n})\nopts_chunk$set(echo = FALSE, cache = FALSE, cache.path = \".cache-EDA-R/\", comment=\"\")\n#options(width = 40)\nfit100 <- fig <- function(path, size = 100) {\n  sprintf(\"<img src='assets/img/%s' style='max-width: %d%%;max-height: %d%%'></img>\", \n          path, size, size)\n}\nfit50 <- function(fname) fit100(fname, 50)\nsys_name <- Sys.info()[\"sysname\"] %>% tolower\nsys_encode <- c(\"utf8\", \"utf8\", \"big5\")[pmatch(sys_name, c(\"linux\", \"darwin\", \"windows\"))]\nthm <- function() theme(text=element_text(size=20))\nlas2 <- theme(axis.text.x = element_text(angle = 90, hjust = 1))\n```\n\n--- .largecontent\n## ggplot2簡介\n\n- 2015年，最受歡迎的R套件之一\n- R環境下的繪圖套件\n- 取自 “The Grammar of Graphics” (Leland Wilkinson, 2005)\n- [設計理念](https://github.com/cosname/ggplot2-translation/blob/master/preface.md)\n- 設計理念\n  - 採用圖層系統\n  - 用抽象的概念來控制圖形，避免細節繁瑣\n  - 圖形美觀\n\n\n--- .largecontent\n## ggplot2基本架構\n\n- 資料 (data) 和映射 (mapping)\n- 幾何對象 (`geom`etric)\n- 座標尺度 (`scale`)\n- 統計轉換 (`stat`istics)\n- 座標系統 (`coord`inante)\n- 圖層 (layer)\n- 刻面 (`facet`)\n- 主題 (`theme`)\n\n--- .largecontent\n## ggplot2 基本語法\n```{r echo=TRUE, eval=FALSE}\nggplot(data=..., aes(x=..., y=...)) + geom_xxx(...) +\n  stat_xxx(...) + facet_xxx(...) + ...\n```\n\n- `ggplot` 描述 data 從哪來\n- `aes` 描述圖上的元素跟 data 之類的對應關係\n- `geom_xxx` 描述要畫圖的類型及相關調整的參數\n- 常用的類型諸如：`geom_bar`, `geom_points`, `geom_line`, `geom_polygon`\n\n--- .largecontent\n## 注意事項\n- 使用 `data.frame` 儲存資料 (不可以丟 `matrix` 物件)\n- 使用 long format (利用`reshape2`將資料轉換成 1 row = 1 observation)\n- 文字型態的資料預設依 ascii 編碼順序做排序\n\n\n---\n## 需要的套件\n```{r echo=TRUE, eval=FALSE}\n# install.packages(c(\"ggplot2\", \"data.table\", \"dplyr\", \"reshape2\"), repos = \"http://cran.csie.ntu.edu.tw/\")\n\nlibrary(ggplot2)\nlibrary(data.table)\nlibrary(dplyr)\nlibrary(reshape2)\n```\n\n\n---\n## 一切從讀檔開始 (CSV)\n[YouBike-Weather Data](http://goo.gl/8itFhs)\n```{r loadubike, echo = FALSE, cache=TRUE}\nubike_path <- \"../../data/ubikebyhourutf8/ubike-hour-201502-utf8.csv\"\nubike <- read.table(ubike_path, sep = \",\", header = TRUE)\n# ubike <- readRDS(\"data/ubike-weather-utf8.rds\")\n```\n\n```{r eval=FALSE, echo=TRUE}\n# 讀檔起手式\nubike <- read.csv('ubikebyhourutf8/ubike-hour-201502-utf8.csv') #請輸入正確的檔案路徑\n# 讀檔進階招式\nubike <- read.csv('檔案路徑', \n          colClasses = c(\"factor\",\"integer\",\"integer\",\"factor\",\"factor\",\n                         \"numeric\",\"numeric\",\"integer\",\"numeric\",\"integer\",\n                         \"integer\",\"numeric\",\"numeric\", \"integer\",\"integer\",\n                         \"numeric\",\"numeric\",\"numeric\", \"numeric\",\"numeric\",\n                         \"numeric\"))\n# 讀檔大絕招\nubike <- fread('檔案路徑',\n          data.table = FALSE,\n          colClasses = c(\"factor\",\"integer\",\"integer\",\"factor\",\n                        \"factor\",\"numeric\", \"numeric\", \"integer\",\n                        \"numeric\", \"integer\",\"integer\",\"numeric\",\n                        \"numeric\", \"integer\",\"integer\",\"numeric\",\n                        \"numeric\",\"numeric\", \"numeric\",\"numeric\",\n                        \"numeric\"))\n```\n\n---\n## 展示資料\n```{r}\nhead(ubike)\n```\n\n--- .largecontent\n## 欄位說明\n<pre>\n   name.eng   name.cht        name.eng     name.cht\n1      date       日期   12    std.sbi 車輛數標準差\n2      hour       時間   13   avg.bemp   平均空位數\n3       sno   場站代號   14   max.bemp   最大空位數\n4     sarea   場站區域   15   min.bemp   最小空位數\n5       sna   場站名稱   16   std.bemp 空位數標準差\n6       lat       緯度   17       temp     平均氣溫\n7       lng       經度   18   humidity         溼度\n8       tot   總停車格   19   pressure         氣壓\n9   avg.sbi 平均車輛數   20  max.anemo     最大風速\n10  max.sbi 最大車輛數   21   rainfall       降雨量\n11  min.sbi 最小車輛數               \n</pre>\n\n\n--- .dark .segue\n\n## 單一數值：Histogram\n\n---\n## Histogram\n- `geom_histogram`\n```{r wind1, echo = TRUE, fig.height=5, warning=FALSE, fig.align='center', message=FALSE}\nthm <- function() theme(text=element_text(size=20, family=\"STHeiti\")) # 控制字體與大小\n# STHeiti是只有Mac才有的字體, 用來解決Mac系統中文顯示錯誤的問題\n# Windows系統的使用者請忽略 `+ thm()` 指令\nggplot(ubike) +\n  geom_histogram(aes(x=max.anemo, y=..count..)) + thm()\n```\n\n--- \n## Histogram\n- `aes(y=..count..)` vs. `aes(y=..density..)`\n```{r wind2, echo = TRUE, fig.height=5, warning=FALSE,fig.align='center',message=FALSE}\nggplot(ubike) +\n  geom_histogram(aes(x=max.anemo, y=..density..)) + thm()\n```\n\n--- \n\n## Histogram\n- `aes(x=..., y=..., fill=...)`\n```{r wind3, echo = TRUE, fig.height=5, warning=FALSE,fig.align='center',message=FALSE}\nggplot(ubike) +\n  geom_histogram(aes(x=max.anemo, y=..density.., fill=..count..)) + thm()\n```\n\n---\n\n## Histogram + Density\n- `geom_histogram() + geom_density()`\n```{r wind4, echo = TRUE, fig.height=5, warning=FALSE,fig.align='center',message=FALSE}\nggplot(ubike, aes(x=max.anemo)) +\n  geom_histogram(aes(y=..density.., fill=..count..)) +\n  geom_density() + thm()\n```\n\n--- .dark .segue\n\n## 量化 v.s. 量化：Scatter Plot\n\n---\n\n## 繪圖之前的整理資料\n文山區各站點在\"2015-02\"的平均溼度 vs. 平均雨量\n\n```{r ubike.site.wet.rainfall1, echo = TRUE, cache=TRUE, dependson=\"c.ubike\"}\n\nx3 <- filter(ubike, grepl(\"2015-02\", date, fixed = TRUE), sarea == \"文山區\") %>%\n  group_by(sna) %>% \n  summarise(rain.avg = mean(rainfall), hum.avg = mean(humidity))\nx3 # print(x3)\n```\n\n--- \n\n## Scatter plot\n- `geom_point()`\n- 參數`size`放在`aes()`函數外面，表示所有的資料固定用相同的size\n```{r ubike.site.wet.rainfall2, echo = TRUE, dependson=\"ubike.site.wet.rainfall1\", fig.height=5, warning=FALSE,fig.align='center'}\nggplot(x3) +\n  geom_point(aes(x = rain.avg, y = hum.avg), size=5) + #size控制點的大小\n  thm()\n```\n\n--- .largecontent\n## Grouped scatter plot\n\n```{r ubike.site.wet.rainfall03, echo = TRUE, dependson=\"ubike.site.wet.rainfall1\",  warning=FALSE,fig.show='hide',fig.align='center'}\nggplot(x3) +\n  # 放在aes裡的 colour 和 size 可依資料調整顏色和大小\n  geom_point(aes(x = rain.avg, y = hum.avg, colour=sna, size=rain.avg)) +\n  # 限制大小\n  scale_size(range=c(5,10)) +  \n  thm()\n```\n\n--- .largecontent\n## Grouped scatter plot\n\n```{r ubike.site.wet.rainfall3, echo = FALSE, dependson=\"ubike.site.wet.rainfall1\",  warning=FALSE,fig.width=12,fig.align='center'}\nggplot(x3) +\n  # aes裡的 colour 和 size 可依資料調整顏色和大小, 使用 scale_size() 控制資料\n  geom_point(aes(x = rain.avg, y = hum.avg, colour=sna, size=rain.avg)) +\n  scale_size(range=c(5,10)) +  \n  thm()\n```\n\n--- .dark .segue\n## 量化 v.s. 量化：Line Chart\n\n--- \n## WorldPhones\n```{r wp1, echo=TRUE}\ndata(WorldPhones)\nWorldPhones\n```\n\n---\n## 小挑戰\n如何畫出每年亞洲電話數量的Line chart?\n\n    ggplot(WorldPhones, aes(x=?????, y=Asia)) + ......\n\n---\n\n## 哪裏不對？\n```{r wp2,echo=TRUE}\nggplot(WorldPhones)\nclass(WorldPhones)\n```\n\n---\n## `matrix` 轉換 `data.frame`\n```{r wp3,echo=TRUE}\nWP.df <- as.data.frame(WorldPhones)\nWP.df$year <- rownames(WP.df)\nclass(WP.df)\n```\n\n---\n## Line chart\n- `geom_line()`\n```{r wp4 ,echo=TRUE,fig.height=5, fig.align='center'}\nggplot(WP.df, aes(x=year, y=Asia)) + geom_line()\n```\n\n\n---\n## Should be Number\n- `as.numeric()`\n```{r wp5,echo=TRUE}\nstr(WP.df)\nWP.df$year <- as.numeric(WP.df$year)\n```\n\n---\n\n## Line chart\n```{r wp6,fig.align='center',echo=TRUE,fig.height=5}\nggplot(WP.df, aes(x=year, y=Asia)) +\n  geom_line() + thm()\n```\n\n---\n## Line chart and scatter plot\n```{r wp7,fig.align='center',echo=TRUE,fig.height=5}\nggplot(WP.df, aes(x=year, y=Asia)) +\n  geom_line(size=2) + #size控制線的寬度或點的大小\n  geom_point(size=5) + thm()\n```\n\n---\n\n## How to plot multiple lines?\n\n### Wide format\n```{r wp8, echo=FALSE, results='asis'}\nxtable(WP.df) %>%\n  print.xtable(type='html')\n```\n\n$$\\Downarrow$$\n\n---\n### Long format\n```{r wp9,message=FALSE,echo=TRUE}\nlibrary(reshape2)\nWP.long <- melt(WP.df, id='year') #id是將保留的欄位名稱\ncolnames(WP.long) <- c('year','area','number')\n```\n```{r wp10, echo=FALSE, results='asis'}\nxtable(WP.long) %>%\n  print.xtable(type='html')\n```\n\n---\n## Multiple Line\n```{r wp11,fig.align='center',echo=TRUE,fig.height=5}\nggplot(WP.long,aes(x=year, y=number, group=area, color=area)) + # gruop按照不同區域劃線\n  geom_line(size=1.5) + geom_point(size=5) + thm()\n```\n\n\n\n--- .dark .segue\n## 質化 v.s. 量化：Bar Chart\n\n---\n## 讀取檔案\n[痞客邦 Visitor Log 訓練資料集 (train.csv)](http://goo.gl/mwtvMj)\n```{r}\npixnet <- read.csv('../../data/train.csv', stringsAsFactors = FALSE)\n```\n\n```{r pixnet, echo=TRUE, eval=FALSE}\npixnet <- read.csv('train.csv', stringsAsFactors = FALSE)\n```\n\n- 2014-11-01 至 2014-11-30 期間，10000 筆隨機取樣的台灣地區網站訪客的瀏覽紀錄\n\n--- \n## 欄位說明\n- url_hash - 去識別後的部落格文章 url\n- resolution - 瀏覽裝置的螢幕解析度\n- browser - 瀏覽裝置的瀏覽器\n- os - 瀏覽裝置的作業系統\n- device_marketing - 瀏覽裝置的產品型號\n- device_brand - 瀏覽裝置的品牌名稱\n- cookie_pta - 去識別化的瀏覽者代碼\n- date - 瀏覽日期\n- author_id - 文章作者 ID 去識別碼\n- category_id - 文章分類\n- referrer_venue - 訪客來源（網域）\n\n--- \n## Bar chart - `geom_bar()`\n```{r pix1,echo=TRUE, fig.height=5,  fig.width=10, warning=FALSE,fig.align='center'}\nggplot(pixnet, aes(x=referrer_venue)) + geom_bar() + \n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  thm()\n```\n\n--- \n## Bar chart\n- 長條圖排序\n```{r echo=TRUE, fig.height=5,  fig.width=10, warning=FALSE,fig.align='center'}\nlibrary(dplyr)\nlevel <- table(pixnet$referrer_venue) %>% names\nrank <- table(pixnet$referrer_venue) %>% order(decreasing = TRUE)\nlevel\nlevel[rank]\npixnet$referrer_venue <- factor(pixnet$referrer_venue, levels = level[rank])\n```\n\n---\n## Bar chart\n- 長條圖排序\n```{r echo=TRUE, fig.height=5,  fig.width=10, warning=FALSE,fig.align='center'}\nggplot(pixnet, aes(x=referrer_venue)) + geom_bar() + \n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  thm()\n```\n\n\n---\n## 兩種類別\n\n```{r ub1,echo=TRUE}\nub2 <- filter(ubike, sarea=='中和區',hour==8) %>% \n  mutate(is.rain=rainfall>1) %>%\n  mutate(is.rain=factor(is.rain, levels=c(FALSE, TRUE), \n                        labels = c(\"晴天\",\"雨天\"))) %>%\n  select(date,avg.bemp, sna, is.rain, tot) %>%\n  group_by(sna, is.rain) %>%\n  summarise(use_rate=mean(avg.bemp/tot)) \nhead(ub2)\n```\n\n---\n## 兩種類別\n\n```{r ubar,echo=TRUE,fig.height=5,fig.show='hide'}\nggplot(ub2, aes(x=sna, y=use_rate, fill=is.rain)) +\n  geom_bar(stat='identity') + # stat='identity'以表格的值做為bar的高度\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) + #控制字的方向\n  thm()\n```\n\n---\n## 兩種類別: stack\n\n```{r ubar1,fig.height=7,fig.width=12,fig.align='center'}\nggplot(ub2, aes(x=sna, y=use_rate, fill=is.rain)) +\n  geom_bar(stat='identity') + # stat='identity'以表格的值做為bar的高度\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) + #控制字的方向\n  thm()\n```\n\n---\n## 兩種類別: dodge\n\n```{r ubar2,echo=TRUE,fig.height=6.5,fig.width=12,fig.align='center'}\nggplot(ub2,aes(x=sna, y=use_rate, fill=is.rain)) +\n  geom_bar(stat='identity',position = 'dodge') + #dodge類別並排\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) + #控制字的方向\n  thm()\n```\n\n---\n## Pie Chart: Bar chart變形\n### 整理資料\n```{r pix2, echo=TRUE}\npix <- data.frame(table(pixnet$referrer_venue)) #table可以算個類別個數\ncolnames(pix) <- c('referrer','count')\npix[5,2] <- pix[5,2] + pix[1,2]\npix <- pix[-1,]\n```\n\n---\n## Pie Chart: Bar Chart變形\n```{r pix3,fig.height=7,fig.width=12}\nggplot(pix,aes(x=\"\", y=count, fill=referrer))+\n  geom_bar(stat='identity', width=1)+\n  coord_polar('y')+\n  geom_text(aes(y = count*0.5+ c(0, cumsum(count)[-length(count)]), \n                label = paste(round(count/sum(count),3)*100,'%',sep=\"\")),\n            size=5)+\n  theme(axis.title.y=element_blank(),\n        axis.text.x=element_blank(),\n        panel.grid=element_blank()) + thm()\n```\n\n---\n## Pie Chart: Bar Chart變形\n```{r pix4,eval=FALSE,echo=TRUE}\nggplot(pix,aes(x=\"\", y=count, fill=referrer))+\n  geom_bar(stat='identity', width=1)+\n  coord_polar('y')+\n  geom_text(aes(y = count*0.5+ c(0, cumsum(count)[-length(count)]), \n                label = paste(round(count/sum(count),3)*100,'%',sep=\"\")),\n            size=5)+\n  theme(axis.title.y=element_blank(),\n        axis.text.x=element_blank(),\n        panel.grid=element_blank()) + thm()\n```\n\n\n---\n## Pie Chart: Bar Chart變形\n### 整理資料\n```{r echo=TRUE, eval=FALSE}\npix <- arrange(pix, -count)\n\nggplot(pix,aes(x=\"\", y=count, fill=referrer)) +\n  geom_bar(stat='identity',width=1) +\n  coord_polar('y') +\n  geom_text(aes(y = count*0.5 + c(0, cumsum(count)[-length(count)]), \n                label = paste(round(count/sum(count),3)*100,'%',sep=\"\")),\n            size=5) +\n  theme(axis.title.y = element_blank(),\n        axis.text.x=element_blank(),\n        panel.grid=element_blank()) + thm()\n```\n\n---\n## Pie Chart: Bar Chart變形\n### 整理資料\n```{r pix, echo=FALSE, eval=FALSE}\npix <- arrange(pix, -count)\n\nggplot(pix,aes(x=\"\", y=count, fill=referrer)) +\n  geom_bar(stat='identity',width=1) +\n  coord_polar('y') +\n  geom_text(aes(y = count*0.5 + c(0, cumsum(count)[-length(count)]), \n                label = paste(round(count/sum(count),3)*100,'%',sep=\"\")),\n            size=5) +\n  theme(axis.title.y = element_blank(),\n        axis.text.x=element_blank(),\n        panel.grid=element_blank()) + thm()\n```\n\n--- .dark .segue\n## 快速重播 + 進階繪圖\n\n--- .largecontent\n## ggplot2基本架構\n\n- 資料 (data) 和映射 (mapping)\n- 幾何對象 (`geom`etric)\n- 座標尺度 (`scale`)\n- 統計轉換 (`stat`istics)\n- 座標系統 (`coord`inante)\n- 圖層 (layer)\n- 刻面 (`facet`)\n- 主題 (`theme`)\n\n--- \n## Data and Mapping\n- data : `ggplot(data=..)`\n- mapping : `aes(x=..., y=...)`\n```{r,eval=FALSE,echo=TRUE}\nggplot(data=WP.df) + geom_line(aes(x=year, y=Asia))\n```\n\n---\n## `geom`etric\n- `geom_line`, `geom_point`, ...\n```{r,echo=TRUE,fig.align='center',fig.height=6}\nggplot(WP.df, aes(x=year,y=Asia)) +\n  geom_line(size=2) + geom_point(size=5)\n```\n\n--- \n## `scale`\n- `size`, `scale_size`, `scale_xxx_xxx`, ...\n```{r scale1, echo = TRUE, dependson=\"ubike.site.wet.rainfall1\",  warning=FALSE,fig.width=12,fig.align='center',fig.height=6}\nggplot(x3) +\n  geom_point(aes(x = rain.avg, y = hum.avg), size=5) + #size控制點的大小\n  thm()\n```\n\n--- \n## `stat`istics\n\n```{r,fig.align='center',message=FALSE,warning=FALSE,fig.height=6,echo=TRUE}\n ggplot(pressure,aes(x=temperature, y=pressure)) +\n  geom_point() + stat_smooth()\n```\n\n--- &twocol\n## `coord`inante \n\n*** =left\n\n```{r pix5,echo=TRUE}\nggplot(pix,aes(x=\"\", y=count, fill=referrer)) +\n  geom_bar(stat='identity') + thm()\n```\n\n*** =right\n\n```{r pix6,echo=TRUE}\nggplot(pix,aes(x=\"\", y=count, fill=referrer)) +\n  geom_bar(stat='identity', width=1) +\n  coord_polar('y') + thm()\n```\n\n\n--- .largecontent\n## `facet`\n- 資料整理，`中和區``各場站``每日平均雨量`\n```{r ubike.site.wet.rainfall11, echo = TRUE, cache=TRUE, dependson=\"c.ubike\"}\nrain <- filter(ubike, grepl(\"2015-02\", date, fixed = TRUE), sarea == \"中和區\") %>%\n  group_by(date, sna) %>% \n  summarise(avg.rain = mean(rainfall))\n```\n\n---\n## `facet`\n- Line Chart\n```{r ubike.site.wet.rainfall13, echo = TRUE, dependson=\"ubike.site.wet.rainfall1\",  warning=FALSE,fig.width=12,fig.height=5.5,fig.align='center'}\nggplot(rain) + \n  geom_line(aes(x=date, y=avg.rain, group=sna, colour=sna), size=2) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) + #控制字的方向\n  thm()\n```\n\n--- .largecontent\n## Line Chart in Facets\n\n```{r ubike.site.wet.rainfall14, echo = TRUE, dependson=\"ubike.site.wet.rainfall1\",  warning=FALSE,fig.width=12,fig.height=5.5,fig.align='center'}\nggplot(rain) + \n  geom_line(aes(x=date, y=avg.rain, group=sna, colour=sna),size=2) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) + #控制字的方向\n  thm() +\n  facet_wrap(~sna, nrow=2) # facet_wrap將各站的情況分開畫\n```\n\n--- .dark .segue\n## 圖形輸出\n\n--- .largecontent\n## 圖形輸出\n- 利用RStudio UI介面存擋\n- 命立列輸出\n\n    # 畫完圖之後，再存檔~~\n    ggsave('檔案名稱')\n    ggsave(\"mtcars.pdf\", width = 4, height = 4)\n    ggsave(\"mtcars.png\", width = 4, height = 4, dpi = 300)\n\n\n\n--- .dark .segue\n## 學習資源\n\n--- .largecontent\n- [ggplot2 cheat sheet from RStudio Inc.](http://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf)\n- [ggplot2 官方文件](http://docs.ggplot2.org/current/index.html)\n\n\n\n---  .largecontent\n## 掌握心法後，如何自行利用R 解決問題\n\n- 了解自己的需求\n- 詢問關鍵字與函數\n    - 歡迎來信 <benjamin0901@gmail.com>, <johnson@dsp.im>或其他教師\n    - 多多交流\n        - [Taiwan R User Group](http://www.meetup.com/Taiwan-R)，mailing list: <Taiwan-useR-Group-list@meetup.com>\n        - ptt R_Language版\n        - [R軟體使用者論壇](https://groups.google.com/forum/#!forum/taiwanruser)\n\n\n--- .dark .segue\n\n## Team Project\n",
    "created" : 1464976561784.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3104908781",
    "id" : "A48EA9BA",
    "lastKnownWriteTime" : 1465059178,
    "last_content_update" : 1465059178,
    "path" : "/Volumes/SD-Lofu/dsp/dsp_ggplot2-master/dsp_ggplot2.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}