{
    "collab_server" : "",
    "contents" : "---\ntitle: \"EDA toturial with R\"\nauthor: \"Wush & Johnson <br> @ NTHU\"\ndate: '`r Sys.Date()`'\n# subtitle:\"EDA toturial with R\"\noutput:\n  ioslides_presentation:\n    css: css/dsp.css\n    # logo: assets/img/Taiwan-R-logo.png\n    widescreen: yes\n    self_contained: false\n---\n\n## About Me {.columns-2}\n\n### Johnson Hsieh, PhD\n- DSP 智庫驅動 資料科學家 [dsp.im](http://dsp.im)\n- Data Science HC 共同創辦人 [FB page](https://www.facebook.com/DataScienceHC)\n    - 教育訓練\n    - 顧問諮詢\n    - 社會服務\n\n\n<img src=\"img/johnson.jpg\" width=\"400px\">\n\n\n# Why Use R?\n```{r setup, include=FALSE, cache=FALSE}\nlibrary(knitr)\nlibrary(magrittr)\nlibrary(xtable)\nlibrary(data.table)\nlibrary(dplyr)\nlibrary(broom)\nlibrary(ggplot2)\nlibrary(quantmod)\nlibrary(pander)\nlibrary(wordcloud)\nlibrary(RColorBrewer)\nopts_chunk$set(echo = FALSE, cache=TRUE, comment=\"\", cache.path = \".cache-EDA/\")\nfig <- function(path, size = 100) {\n  sprintf(\"<img src='img/%s' style='max-width: %d%%;max-height: %d%%'></img>\", \n          path, size, size)\n}\nfig2 <- function(path, size = 100) {\n  sprintf(\"<img src='img/%s' style='width: %d%%'></img>\", \n          path, size)\n}\nsys_name <- Sys.info()[\"sysname\"] %>% tolower\nsys_encode <- c(\"utf8\", \"utf8\", \"big5\")[pmatch(sys_name, c(\"linux\", \"darwin\", \"windows\"))]\nsessionInfo() %>% capture.output %>% cat(file = \"sessionInfo.log\", sep = \"\\n\")\n```\n\n```{r loadubike, echo = FALSE, cache=TRUE}\nubike_path <- sprintf(\"data/ubikeweather%s.csv\", sys_encode)\nubike <- fread(ubike_path, header = TRUE, showProgress = interactive(), data.table = FALSE)\n# ubike <- readRDS(\"data/ubike-weather-utf8.rds\")\n```\n\n\n## R 來自世界上最專業的統計學家 {.smaller}\n\n<center>`r fig('statician_10521919-655x280.jpg')`</center>\n\n取自 <http://myfootpath.com/careers/engineering-careers/statistician-careers/>\n\n\n## R 可以輸出高品質的視覺化 {.smaller}\n\n`r fig(\"flights_sml.jpg\", 100)`\n\n取自 <http://www.r-bloggers.com/mapping-the-worlds-biggest-airlines/>\n\n\n## R 有驚人彈性和潛力 {.smaller}\n\n<center>`r fig(\"fig_10_cran1.png\", 50)`</center>\n\n取自 <http://r4stats.com/2013/03/19/r-2012-growth-exceeds-sas-all-time-total/>\n\n\n## R 很容易和其他工具整合 {.smaller}\n\n<center>\n```{r r-integration, warning=FALSE}\ntools <- strsplit(\"Rcpp,rJava,rpy2,RHadoop,RMySQL,RPostgreSQL,RJDBC,RODBC,ROpenOffice,rredis,rmongodb,RSelenium\", \",\")[[1]]\nfreq <- rep(1, length(tools))\npal <- brewer.pal(length(tools),\"BuGn\")\nwordcloud(tools, freq, random.color = TRUE, colors = pal)\n```\n</center>\n\n## R 很容易擴充和客製化 {.smaller}\n\n<center>`r fig(\"t134_3ca_lg.jpg\", 100)`</center>\n取自 <http://img.diynetwork.com/DIY/2003/09/18/t134_3ca_med.jpg>\n\n## 本週目標\n\n### 環境設定\n\n- 建立可以使用R 的環境\n- 了解R 的使用界面\n\n### 學習R 語言\n\n- 透過實際的範例學習R 語言\n    - 讀取資料\n    - 選取資料\n    - 敘述統計量與視覺化\n- 利用實例來傳授學習的心法\n\n# 工欲善其事，必先利其器\n\n## 傢俬準備好  {.columns-2}\n\n### 環境設定\n- R（R-3.1.3 以上版本）\n- RStudio IDE（98.1091 以上版本）\n- [疑難排解指南](https://github.com/dspim/R/wiki/R-&-RStudio-Troubleshooting-Guide)\n\n\n### 熟悉界面\n- 程式碼編輯區\n- 命令列區\n- 其他資訊區\n- 檔案系統區\n\n## 熟悉RStudio的 命令列 界面\n### 程式的**輸入**、**輸出**、**中斷**\n\n- 注意最左下腳的符號是 `>`\n- 輸入 `\"hello world\"` 後按下Enter，檢查螢幕輸出（記得加上引號）\n- 輸入 `1 + 1` 後按下Enter，檢查螢幕輸出，注意有無引號\n- 輸入 `1 + ` 後按下Enter，檢查螢幕輸出，注意最左下角的開頭變成`+`\n- 按下Ctrl + C或ESC，檢查哪一個按鈕會讓左下角回復成`>`開頭\n- 在新的一行命令列區輸入 `me` 之後按下Enter\n- 在新的一行命令列區輸入 `me` 之後按下tab\n\n## 熟悉RStudio的 程式碼編輯 界面\n- 請建立再編輯界面寫程式的習慣\n- 開啟新的R Script檔案\n- 在第一行輸入 `me` 隻後按下Ctrl + Enter後，觀察命令列區\n- 利用滑鼠點選 `me` 後的位置，確認游標閃爍的位置在 `me` 之後，按下tab\n\n## 熟悉RStudio的其他頁面 {.flexbox .vcenter}\n### 請見現場示範\n\n# 讓我們來說 R 語\n\n## 敘述句 {.columns-2}\n\n```{r, echo = TRUE}\n1; 2;\n\"1; 2;\"\n``` \n\n\n### 筆記\n- 敘述句以 `;` 或 `斷行` (輸入Enter) 作結尾\n- R 會把單引號 `'` 或雙引號 `\"` 所包覆的敘述當成字串\n- 沒有完成的敘述句，命令列的開頭會變成 `+`\n- 可以用 Ctrl + C 或 Esc 中斷敘述句\n\n## 敘述句 {.columns-2}\n\n```{r echo=TRUE}\n# 基礎運算\n1 + 2 + 3\n1 +       2 + 3\nx <- 10\ny <- 4\n(x + y) / 2 \n```\n\n### 筆記\n- 基本數學運算符號 (+, -, *, /, ...)\n- 空白 (space) 不影響程式執行\n- Commands 以空行 (newline) 或分號 (;) 區隔\n- 箭號 (<-) 表示賦值，把箭號右邊的結果指向到R物件\n- R 的指令有大小寫的區分\n- 井號 (#) 表示註解，使得該行不執行運算\n\n## 向量 (vector)：R 最基礎的物件 {.smaller}\n- 以`c()`表示 (c 取自combine之意), 元素以逗號分隔。\n- 連續整數向量可以利用 : (冒號) 簡記，譬如數列1, 2, 3 在 R 語言中可利用 1:3 簡記\n- 也可以透過`seq`函數生成有規則的數值向量(序列)  \n\n```{r echo=TRUE}\n# basic expression of integer vector\nc(1, 2, 3, 4)\n\n# simple expression\n1:4\n4:1\n```\n\n\n## 向量 (vector)：R 最基礎的物件2 {.smaller}\n- 以`c()`表示 (c 取自combine之意), 元素以逗號分隔。\n- 連續整數向量可以利用 : (冒號) 簡記，譬如數列1, 2, 3 在 R 語言中可利用 1:3 簡記\n- 也可以透過`seq`函數生成有規則的數值向量(序列)  \n\n```{r echo=TRUE}\n# use seq() function\nseq(1, 4, 1)\nseq(1, 9, by = 2) # 試著按tab鍵，執行自動補字\nseq(1, 9, length.out = 5)\n```\n\n## 小挑戰\nseq 函數列出偶數數列: 2, 4, 6, 8, 10\n\n\n\n## 向量的 Recycling properties {.smaller .columns-2}\n\nrecycling properties，便於執行四則運算。\n```{r echo=TRUE}\n# shorter arguments are recycled\n1:3 * 2\n\n1:4 + 1:2\n\nc(0.5, 1.5, 2.5, 3.5) * c(2, 1)\n```\n\nWarning message:\n```{r echo=TRUE}\n# warning (why?)\n1:3 * 1:2\n\n1:3 + 1:4\n```\n\n\n## 小挑戰\n向量的四則運算，請計算以下五位女藝人的BMI\nHint:\n```{r echo=TRUE, eval=FALSE}\nheight <- c(174, 158, 160, 168, 173)\nweight <- c(52, 39, 42, 46, 48)\n```\n```{r echo=FALSE, eval=FALSE}\nheight <- c(174, 158, 160, 168, 173)\nweight <- c(52, 39, 42, 46, 48)\nweight/ (height/100)^2\n```\n\n## 在 R 中查詢說明文件 {.smaller .columns-2}\n\n各種自救措施\n```{r echo=TRUE, eval=FALSE}\nhelp.start()\nab # 輸入`ab`後 按下tab\n?abs   # 等同於 help(abs)\n??abs \napropos(\"abs\")\nexample(abs)\nvignette()\nvignette(\"Introduction\", \"Matrix\")\n```\n<br>\n<br>\n\n### 筆記\n- help.start: 說明檔首頁\n- 自動完成 (tab鍵)：列出所有`ab`開頭的函數\n- ? (一個問號)：查詢特定函數的說明檔\n- ?? (兩個問號)：查詢包含特定關鍵字的說明檔\n- apropos : 查詢包含特定關鍵字的函數\n- example : 執行特定函數的使用範例\n- vignette : 查詢R環境中各種介紹文件\n\n\n\n## 常用資料分析函數 {.smaller}\n統計量： `sum`, `mean`, `abs`, `sd`, `length`, `table`, `cut`, ...\n\n```{r echo=TRUE}\nx <- c(174, 158, 160, 168, 173)\nsum(x)    # 向量元素加總\nlength(x) # 向量長度 (包含幾個元素)\nmean(x)   # 平均數 等價於 sum(x) / length(x)\nabs(x - mean(x)) / sd(x) # T統計量\n```\n\n\n## 常用資料分析函數2 {.smaller}\n統計量： `sum`, `mean`, `abs`, `sd`, `length`, `table`, `cut`, ...\n\n```{r echo=TRUE}\na <- runif(20, 1, 100) # 隨機抽取20筆介於1~100的亂數\ncut(a, c(1,20,40,60,80,100)) # 依據給定的breaks對數值資料做分組\ntable(c(\"a\", \"a\", \"b\", \"c\", \"b\", \"a\"))\n```\n\n\n## 常用資料分析函數3 {.smaller}\n排序： `order` vs. `sort`\n\n```{r echo=TRUE}\norder(x) # 取得物件x各元素大小排序之順序 (由小到大)\nx[order(x)]\nx[order(x, decreasing = TRUE)]  # 由大到小排序\n\nsort(x) \nsort(x, decreasing = TRUE)\n# `sort` 函數：直接對元素排序\n# `order` 函數：取得元素排序後的順序\n```\n\n\n## 常用資料分析函數4 {.smaller}\n重抽： `sample`\n```{r echo=TRUE}\nsample(x)    # 對x做重新排序\nsample(1:5)\nsample(1:5, size = 3) # 從1:5中任取3個值(不重複)\nsample(1:5, size = 3, replace = TRUE) # 從1:5中任取3個值(可重複)\n```\n\n\n## 向量的取值、取代與新增 {.smaller}\n\n- 利用[ ] (中括號) 、比較運算子(>, <, >=, <=, ==, !=)、邏輯運算子 (&, |) 以及負號 (-) 進行向量的取值。\n\n```{r echo=TRUE}\nx <- c(174, 158, 160, 168, 173)\nx[1]           # 選取第1個位置的元素\nx[c(1, 3)]     # 選取第1, 3個位置的元素\nx[c(2, 3, 1)]  # 選取第2, 3, 1個位置的元素 (依照順序)\n\n# 在[ ]中使用負號 (-) 移除給定位置元素 (反向選取)\nx[-1]\nx[-c(1, 3, 4)]\n```\n\n## 向量的取值、取代與新增2 {.smaller}\n\n- 利用[ ] (中括號) 、比較運算子(>, <, >=, <=, ==, !=)、邏輯運算子 (&, |) 以及負號 (-) 進行向量的取值。\n- 利用 [ ] (中括號) 與 <- (箭號) 進行取代與新增元素\n\n```{r echo=TRUE}\n# 使用比較運算子 加上 `which` 函數進行取值\nx > 160\nindex <- which(x > 160) # 滿足條件的位置為TRUE，反之為FALSE\nx[index]\n\n# 指令壓縮，將指令寫在 [ ] 中，以達到縮短程式碼的功效\nx[which(x > 160)]\n\n# 也可以使用邏輯算子進行取值\nx[x > 160 & x < 170] # 選取位置為TRUE的位置\n```\n\n## 小挑戰\n利用指令壓縮的方式取得 x大於170 或 x小於160 的元素    \nHint: 使用邏輯算子 or (|)\n\n## 向量的取值、取代與新增3 {.smaller}\n- 利用 [ ] (中括號) 與 <- (箭號) 進行取代與新增元素\n```{r echo=TRUE}\n#' ## 元素的取代\nx[2] <- 158.5 # 取代x物件的第二個元素\nx\n\nx[c(1,3)] <- 0 # 取代第一、三個元素為 0\nx[6] <- 166    # 新增第六個元素為 166\n# 等價於 c(x, 166) \nx\nx[x > 160] <- 170 # 取代大於160的值為170\nx\n```\n\n## R 的資料架構 {.smaller}\n- R 包含三種基本資料型態 (class)：\n    1. 數值 (numeric vector)： `x <- c(174, 158, 160, 168, 173)`\n    2. 字串 (character vector)： `y <- c(\"林志玲\", \"蔡依林\", \"楊丞琳\", \"天心\", \"隋棠\") `\n    3. 邏輯 (logical vector)： `z <- c(TRUE, FALSE, FALSE, FALSE, TRUE)`\n- 利用`class`函數判斷物件型態\n- character vector，以雙引號 \" \" 或單引號 ' ' 註記 \n- logical vector，以TRUE / FALSE 註記，亦可簡化為 T / F\n\n```{r echo=FALSE}\n# numeric vector\nx <- c(174, 158, 160, 168, 173)  # 身高資料\n# character vector，以雙引號 \" \" 或單引號 ' ' 註記 \ny <- c(\"林志玲\", \"蔡依林\", \"楊丞琳\", \"天心\", \"隋棠\") \n# logical vector，以TRUE / FALSE 註記，亦可簡化為 T / F\nz <- c(TRUE, FALSE, FALSE, FALSE, TRUE)\n```\n```{r echo=TRUE}\nclass(x); class(y); class(z)\n```\n\n## 資料型態的轉換 {.smaller}\n- 物件一次只能接受一種型態\n- 若同時在一個向量中給定多種型態，R 將會依以下順序進行自動轉換：字串 > 數值 > 邏輯。\n- 也可以利用以下函數自行轉換向量的型態：`as.character`, `as.numeric`, `as.logical`。\n\n```{r echo=TRUE, eval=FALSE}\n# 向量只容許一種類別 (字串 > 數值 > 邏輯)\nc(174, 52, \"林志玲\") # 數值被轉換成字串\n\n# 布林值 TRUE 被轉換成1，FALSE被轉換成0\nc(174, 52, TRUE) \nc(1.1, 2.4, TRUE, FALSE)\n\n# 所有元素都被轉換成字串\nc(\"林志玲\", 174, 52, TRUE)\n\n# 字串轉數字\na1 <- c(\"89\", \"91\", \"102\")\nas.numeric(a1)\n```\n\n## 資料型態的轉換2 {.smaller}\n\n- 物件一次只能接受一種型態\n- 若同時在一個向量中給定多種型態，R 將會依以下順序進行自動轉換：字串 > 數值 > 邏輯。\n- 也可以利用以下函數自行轉換向量的型態：`as.character`, `as.numeric`, `as.logical`。\n\n```{r echo=TRUE, eval=FALSE}\n# 布林轉數字\na2 <- c(TRUE, TRUE, FALSE)\nas.numeric(a2)\n\n# 數字轉布林\na3 <- c(-2, -1, 0, 1, 2) # 只有0會被轉成FALSE\nas.logical(a3)\n\n# 數字轉字串\nas.character(a3)\n```\n\n## 特殊資料型態 {.smaller}\n\n- 特殊的數值型態：時間\n```{r echo=TRUE}\nSys.time() # \"2015-09-03 08:50:24 CST\"\n```\n\n- 特殊的字串型態：類別\n```{r echo=TRUE}\nfactor(c(\"male\", \"female\", \"female\", \"male\"))\n```\n\n## 類別 (factor) 物件簡介  {.smaller}\n當一向量變數是類別型變數 (譬如：性別、教育水準) 時，在R語言中以factor進行定義。\n```{r echo=TRUE}\n# variable gender with 2 \"male\" entries and 3 \"female\" entries \n# rep(x, n) 函數能重複x物件n次\ngender <- c(rep(\"male\",2), rep(\"female\", 3)) \ngender\ngender <- factor(gender)\ngender\nlevels(gender) \n```\n- \n\n## 類別 (factor) 物件簡介2  {.smaller}\n\n- 可使用 `as.numeric` 將factor物件轉換成數值\n- factor 函數中有個多的參數可以進行設定\n\n```{r echo=TRUE}\n# 1=female, 2=male internally (alphabetically)\nas.numeric(gender) \n\n# change vector of labels for the levels\nfactor(gender, levels=c(\"male\", \"female\"), labels=c(\"M\", \"F\"))\n\n# 類別轉字串\nas.character(gender)\n```\n\n\n## 資料型態的轉換3  {.smaller .columns-2}\n\n### 將數值轉換為類別\n```{r cut, echo = TRUE}\n# 利用cut對資料做分級\nx <- c(75, 81, 82, 76, 91, 92)\ncut(x, breaks = c(70, 80, 90, 100))\n```\n<br>\n<br>\n\n\n### 資料型態的轉換 - 將字串轉換為數值\n```{r as.numeric, echo = TRUE}\nx <- c(\"1\", \"2\", \"3\", \"2\", \"a\")\nas.numeric(x)\n```\n- `NA`代表Not available，代表著**missing value**\n\n\n\n## 資料型態的轉換 - 資料清理\n\n### 民國80年至82年的國民生產毛額\n\n<pre><code style=\"text-align: center;\">\n百萬元\n5,023,763\n5,614,679\n6,205,338\n</code></pre>\n\n```{r gdp1, echo = TRUE}\ngdp <- c(\"5,023,763\", \"5,614,679\", \"6,205,338\")\nas.numeric(gsub(\",\", \"\", gdp))\n```\n\n## 小挑戰\n將民國年 (字串) 轉為 西元年 (數值)\n```{r echo=TRUE, eval=FALSE}\nyear <- c(\"民國101\", \"民國102\", \"民國103\", \"民國104\")\n```\n\n## R 是向量式\n- 所有的資料都是向量\n- 上述介紹的整數、實數、字串和類別型都是相同型態的向量\n- `list`是R 物件的向量\n- `data.frame`是長度相同的R 物件的向量\n\n## `data.frame`是最常使用的物件\n\n- `data.frame`的概念在各種資料處理的領域非常常見\n    - 例：資料庫\n- （實務經驗）R 使用者會希望能透過前處理把資料轉換為`data.frame`的型式\n- R 提供將資料匯入成`data.frame`的功能\n- R 提供自`data.frame`開始的各種進階處理功能\n    - 資料的整理\n    - 圖形的繪製\n    - 模型的配適與預測\n    \n## 小挑戰\n\n- 請問根據以下的輸出，這份ubike的各欄類別為何？\n\n```{r ubike.type, echo = FALSE, results='asis', dependson=\"loadubike\", cache=TRUE}\nubike.type <- sapply(ubike, class)\nsplit(ubike.type, rep(1:3, each = 7)) %>%\n  lapply(function(x) {\n    tmp <- as.data.frame(x)\n    colnames(tmp) <- \"class\"\n    tmp$name <- rownames(tmp)\n    tmp[2:1]\n  }) %>%\n  do.call(what = cbind) %>%\n  set_colnames(rep(c(\"name\", \"class\"), 3)) %>%\n  xtable %>% print.xtable(type = \"html\", include.colnames = FALSE, include.rownames = FALSE)\n```\n\n## 小挑戰\n\n- 請問根據中文名稱，這份ubike的各欄類別是否合理？\n\n```{r ubike.cname, echo = FALSE, results = 'asis', dependson=\"ubike.type\"}\nubike.ctype <- sapply(ubike, class)\nnames(ubike.ctype) <- c(\"日期\", \"時間\", \"場站代號\", \"場站區域\", \"場站名稱\", \n  \"緯度\", \"經度\", \"總停車格\", \"平均車輛數\", \"最大車輛數\", \n  \"最小車輛數\", \"車輛數標準差\", \"平均空位數\", \"最大空位數\", \n  \"最小空位數\", \"空位數標準差\", \"平均氣溫\", \"溼度\", \n  \"氣壓\", \"最大風速\", \"降雨量\")\n  \nsplit(ubike.ctype, rep(1:3, each = 7)) %>%\n  lapply(function(x) {\n    tmp <- as.data.frame(x)\n    colnames(tmp) <- \"class\"\n    tmp$name <- rownames(tmp)\n    tmp[2:1]\n  }) %>%\n  do.call(what = cbind) %>%\n  set_colnames(rep(c(\"name\", \"class\"), 3)) %>%\n  xtable %>% print.xtable(type = \"html\", include.colnames = FALSE, include.rownames = FALSE)\n```\n\n# 資料的讀取\n\n## 讀取表格檔案 - 0. 先抓取資料\n\n- 抓取ubike和天氣的資料\n    - 可至 https://goo.gl/I01l4P\n    - 可透過USB 隨身碟\n    \n## 讀取表格檔案 - 1. 先檢視資料\n\n```{r read.lines, echo = TRUE, eval = FALSE}\n# path <- \"data/ubikeweatherbig5.csv\"\npath <- file.choose()\nreadLines(path, n = 5)\n```\n\n## 讀取表格檔案 - 2. 讀取資料\n\n- 先讀取一部分，再讀取全部\n\n```{r read.table, echo = TRUE, eval = FALSE}\nubike <- read.table(path, sep = \",\", header = TRUE, nrows = 100)\nhead(ubike)\nubike <- read.table(path, sep = \",\", header = TRUE, \n  colClasses = c(\"factor\", \"integer\", \"integer\", \"factor\", \"factor\", \n    \"numeric\", \"numeric\", \"integer\", \"numeric\", \"integer\", \"integer\", \n    \"numeric\", \"numeric\", \"integer\", \"integer\", \"numeric\", \"numeric\", \n    \"numeric\", \"numeric\", \"numeric\", \"numeric\"))\n# object.size(ubike) # 約86MB\n```\n## 常見的讀取錯誤1\n\n### 路徑錯誤\n\n```{r read.table_wrong_path, echo = TRUE, eval=FALSE}\npath <- \"wrong_path\"\npower <- read.table(file = path, header = TRUE, sep = \",\")\n```\n```\nError in file(file, \"rt\") : 無法開啟連結\n此外: Warning message:\nIn file(file, \"rt\") : 無法開啟檔案 'wrong_path' ：No such file or directory\n```\n- 絕對路徑\n    - 確認檔案是否存在\n- 相對路徑\n    - 利用`getwd`了解R 當下的路徑位置\n    \n## 常見的讀取錯誤2\n\n### 格式錯誤\n\n```{r read.table_wrong_format, echo = TRUE, eval=FALSE}\npath <- \"data/ubikeweatherbig5.csv\"\npower <- read.table(file = path, header = TRUE, sep = \"1\")\n```\n```\nError in read.table(file = path, header = TRUE, sep = \"1\") : \n  more columns than column names\n```\n- 利用其他編輯器確認分隔符號\n- 確認每列的資料的欄位是正確的\n    - 必要時，請用其他文件編輯器校正欲讀取的檔案\n    \n## 常見的讀取錯誤3\n\n### 編碼錯誤\n\n```{r read.table_wrong_encoding, echo = TRUE, cache=TRUE, eval = FALSE}\npath <- \"data/ubikeweatherbig5.csv\"\npower <- read.table(file = path, header = TRUE, sep = \",\", nrows = 10)\n```\n\n```\n錯誤在type.convert(data[[i]], as.is = as.is[i], dec = dec, numerals = numerals,  : \n  無效的多位元組字串於 '<ab>H<b8>q<b0><cf>'\n```\n\n- 查詢檔案的編碼\n    - 常見的中文編碼有`UTF-8`和`BIG-5`\n    - 讀取時套上`file`函數指定編碼\n    - 組合`readLines`、`iconv`和`write`來製造符合系統編碼的檔案\n\n<div class=\"notes\">\n- 專家區\n```{r, echo=TRUE, eval=FALSE}\npath <- \"data/ubikeweatherbig5.csv\"\nraw <- read.table(file(path, encoding = \"BIG-5\"), \n                  header = TRUE, sep = \",\", \n                  nrows = 10)\nraw <- readLines(path, n = 10, encoding = \"BIG-5\")\nraw2 <- iconv(raw, from = \"BIG-5\", to = \"UTF-8\")\nwrite(raw2, \"data/ubikeweatherutf8.csv\")\n```\n</div>\n\n## ubike是一種`data.frame`\n\n```{r, echo = TRUE}\nclass(ubike)\n```\n\n## 校正欄位名稱\n\n```{r c.ubike, eval = TRUE, echo = TRUE, cache = TRUE, results='hide'}\ncolnames(ubike) <- \n  c(\"日期\", \"時間\", \"場站代號\", \"場站區域\", \"場站名稱\", \n  \"緯度\", \"經度\", \"總停車格\", \"平均車輛數\", \"最大車輛數\", \n  \"最小車輛數\", \"車輛數標準差\", \"平均空位數\", \"最大空位數\", \n  \"最小空位數\", \"空位數標準差\", \"平均氣溫\", \"溼度\", \n  \"氣壓\", \"最大風速\", \"降雨量\")\n```\n\n## 存取資料庫： SQLite\n\n```{r, include=FALSE}\nif (file.exists(\"ubike.db\")) file.remove(\"ubike.db\")\n```\n\n```{r dbi, echo = TRUE, warning = FALSE, cache = TRUE, results='hide'}\n# install.packages(\"RSQLite\")\nlibrary(RSQLite)\ndb.path <- \"ubike.db\"\ndrv <- dbDriver(\"SQLite\")\ndb <- dbConnect(drv, db.path)\ndbWriteTable(db, \"ubike\", head(ubike))\ndbListTables(db)\ndbReadTable(db, \"ubike\")\ndbDisconnect(db)\n```\n\n## 未來的學習清單\n\n### 各式資料庫的連接\n\n- SQL Database: `RMySQL`, `RPostgreSQL`, `ROracle`, `RJDBC`, `RODBC`\n- No SQL Database: `rmongodb`, `rredis`\n- 讀取XML和網頁資料\n    - `XML`套件和XPath\n- 讀取json資料\n    - `RJSONIO`套件\n    \n# 資料的選取\n\n## 表格的選取 - 座標\n\n```{r select_table, echo = TRUE, dependson=\"c.ubike\"}\nubike[2, 3]\n```\n\n```{r select_table_demo, echo = FALSE, results='markup', dependson=\"c.ubike\"}\nubike[1:6, 1:3]\n```\n\n## 表格的選取 - 欄\n\n```{r select_column, echo = TRUE, dependson=\"c.ubike\"}\nhead(ubike[[\"日期\"]]) \n# head(ubike$日期)\nhead(ubike[,1])\n```\n\n## 範例 {.smaller .comlums-2}\n取出場站代號為`1`的所有資料\n\n1. 自`ubike`選取`場站代號`\n2. 將結果1.輸入至函數`unique`\n3. 利用布林運算，把1.的結果和`1`比較\n4. 將結果3.輸入至函數`which`\n5. 利用3.和4.的結果選取ubike的列\n\n\n```{r select_row_example, echo = TRUE, results = \"hide\"}\nans1 <- ubike[[\"場站代號\"]]\nans2 <- unique(ans1)\nans3 <- ans1 == 1\nans4 <- which(ans3)\nans5 <- ubike[ans3,]\nans5 <- ubike[ans4,]\n```\n\n## 小挑戰\n\n- 請查詢場站代號1099所在的行政區\n- 請查詢場站代號1099的氣溫\n    1. 自`ubike`選取`場站代號`\n    2. 利用布林運算，把1.的結果和`1099`比較\n    3. 自`ubike`選取2.的列之後，用1.的方法選取`平均氣溫`\n        3.1 可利用座標的概同時選取出結果\n\n<div class=\"notes\">\n```{r echo=TRUE, eval=FALSE}\nx1 <- ubike[[\"場站代號\"]]\nx2 <- x1 == 1099\nx3 <- ubike[x2,]\nx3 <- x3[[\"平均氣溫\"]]\n```\n</div>\n\n## 指令的壓縮\n\n- 請大家學習「被壓縮的程式碼」該如何解讀\n    - 掌握運算符號的運算順序\n\n```{r, echo = TRUE, results='hide'}\nubike[ubike[[\"場站代號\"]] == 1 & ubike[[\"日期\"]] == \"2015-03-01\",]\n\nx1 <- ubike[[\"場站代號\"]] == 1\nx2 <- ubike[[\"日期\"]] == \"2015-03-01\"\nx3 <- x1 & x2\nx4 <- ubike[x3,]\n```\n\n## 2014 年最有影響的套件之一：magrittr\n\n- 壓縮的程式碼不好讀\n- 展開的程式碼會產生很多暫存變數\n- 套件`magrittr`部份解決了這個問題\n- 請參考Johnson於DSHC meetup的[套件介紹](https://goo.gl/vP6qW2)\n\n```{r magrittr, echo = TRUE, results='hide'}\n\nans1 <- ubike[[\"場站代號\"]]\nans1.1 <- unique(ans1)\n\nunique(ubike[[\"場站代號\"]])\n\n# install.packages(\"magrittr\")\nlibrary(magrittr)\nubike[[\"場站代號\"]] %>%\n  unique\n```\n\n## 2014 年最有影響的套件之一：dplyr\n\n- 讓R 使用者可以用更有彈性的方式來處理資料\n- 針對`data.frame`做設計（名稱中的`d`）\n- 設計理念\n    - 導入資料整理最重要的動作（非常類似SQL）\n    - 快\n    - 支援異質資料源（`data.frame`或資料庫中的表格）\n\n## 學習dplyr的官方方式：`vignette`\n\n```{r dplyr-vignette, echo = TRUE, eval=FALSE}\nvignette(all = TRUE, package = \"dplyr\")\nvignette(\"introduction\", package = \"dplyr\")\n```\n\n- 更詳細的dplyr介紹可以閱讀dplyr的小論文\n- R 的開發者會針對一個主題撰寫小論文做介紹\n\n## dplyr簡介 {.columns-2}\n\n- `filter` 對列做篩選\n- `select` 對欄做篩選\n- `mutate` 更改欄或新增欄\n- `arrange` 排列\n- **`group_by` + `summarise` 分類\n\n\n<center>`r fig(\"R_ETL_Fn1.png\")`</center>\n- 出處：[資料科學愛好者年會資料分析上手課程：ETL1](https://www.youtube.com/watch?v=JD1eDxxrur0)\n- 請參考Paul於DSHC meetup的[套件介紹](http://goo.gl/tHF69B)\n\n# 資料的探索\n\n## 挑戰：學習`sd`的用法\n\n- 透過`?sd`嘗試自學標準差的用法\n- 選取`場站代號`為1和`日期`為\"2015-03-01\"的資料\n- 計算`捷運市政府站(3號出口)`在`\"2015-03-01\"`的`降雨量`的標準差\n\n```{r echo=TRUE}\nx1 <- ubike[[\"場站代號\"]] == 1\nx2 <- ubike[[\"日期\"]] == \"2015-03-01\"\nubike[x1 & x2, \"降雨量\"]\nsd(ubike[x1 & x2, \"降雨量\"])\n```\n\n## 挑戰：學習`sd`的用法\n- 練習使用dplyr & pipes\n```{r echo=TRUE, eval=FALSE}\nlibrary(dplyr)\nsd(select(\n  filter(ubike, 場站代號 == 1, 日期 == \"2015-03-01\"),\n  降雨量)[[\"降雨量\"]])\n\nfilter(ubike, 場站代號 == 1, 日期 == \"2015-03-01\") %>%\n  select(降雨量) %>%\n  extract2(\"降雨量\") %>%\n  sd\n```\n\n## 各行政區的站點數： `group_by`\n\n`r fig(\"R_ETL_Fn2.png\")`\n\n<br>\n\n### 每日的平均雨量\n\n```{r, echo = TRUE, results = \"hide\"}\ngroup_by(ubike, 日期) %>%\n  summarise(平均降雨量 = mean(降雨量))\n```\n\n## 各行政區的站點數： `group_by`\n\n### 各場站區域的站點數\n```{r, echo = TRUE, results = \"hide\"}\ngroup_by(ubike, 場站區域) %>%\n  summarise(站點數 = length(unique(場站代號))) %>%\n  arrange(站點數)\n```\n\n\n### 各場站區域的站點代號清單\n```{r, echo = TRUE, results = \"hide\"}\ngroup_by(ubike, 場站區域) %>%\n  summarise(站點代號清單 = paste(unique(場站代號), collapse = \",\"))\n```\n\n## 小挑戰\n探索一個質化變數，利用`table`列出所有的`場站名稱`出現的次數\n\n<div class=\"notes\">\n```{r table.example, echo = TRUE, results = \"hide\"}\nhead(sort(table(ubike[[\"場站名稱\"]])))\n\ntable(ubike[[\"場站名稱\"]]) %>%\n  sort %>%\n  head\n```\n</div>\n\n## 探索變數間的關係\n\n- `ftable`：質化 v.s. 質化\n- `bar chart`：質化 v.s. 量化\n- `scatter plot`： 量化 v.s. 量化\n\n## 探索質化變數與質化變數的關係\n\n```{r ftable.example, echo = TRUE, eval = FALSE}\n?ftable\nexample(ftable)\n```\n\n```\nftable> ## Start with a contingency table.\nftable> ftable(Titanic, row.vars = 1:3)\n                   Survived  No Yes\nClass Sex    Age                   \n1st   Male   Child            0   5\n             Adult          118  57\n      Female Child            0   1\n             Adult            4 140\n```\n\n## 小挑戰：\n\n1. 選取場站區域為`信義區`且日期為`\"2015-03-01\"`的列\n2. 選取欄`平均車輛數`與`總停車格`\n3. 利用布林運算式計算\"`平均車輛數`\"是否超過`總停車格`的一半\n    - 命名為`空位較多`\n4. 選取欄`時間`\n5. 比較`時間`和`空位較多`的交互關係\n\n## 小挑戰（參考答案）\n\n```{r, echo = TRUE, results = \"hide\", dependson=\"c.ubike\"}\nx1 <- ubike[[\"場站區域\"]] == \"信義區\"\nx2 <- ubike[[\"日期\"]] == \"2015-03-01\"\nx3 <- ubike[x1 & x2, \"平均車輛數\"]\nx4 <- ubike[x1 & x2, \"總停車格\"]\nx5 <- x3 < x4 / 2\nx6 <- ubike[x1 & x2, \"時間\"]\nftable(x6, x5)\n\nx1 <- filter(ubike, 場站區域 == \"信義區\", 日期 == \"2015-03-01\")\nx2 <- mutate(x1, 空位較多 = 平均車輛數 < 總停車格 / 2)\nftable(x2[[\"時間\"]], x2[[\"空位較多\"]])\n\ntbl <- filter(ubike, 場站區域 == \"信義區\", 日期 == \"2015-03-01\")  %>%\n  mutate(空位較多 = 平均車輛數 < 總停車格 / 2)\nftable(tbl[[\"時間\"]], tbl[[\"空位較多\"]])\n```\n\n# Data Visualization with ggplot\n\n## Data Visualization\n- 清晰有效地傳達與溝通訊息\n- 教學、研究、宣傳\n- 美學、功能兼顧\n- 統計圖形、訊息可視化\n- 參考Johnson於DSHC meetp的[介紹](http://goo.gl/xYorRm)\n\n## ggplot\n- 當前最多人使用的視覺化R套件\n- 取自 “The Grammar of Graphics” (Leland Wilkinson, 2005)\n- 由Hadley Wickham於2005年發表 (Chief Scientist in RStudio)\n- 設計理念\n    - 採用圖層系統\n    - 用抽象的概念來控制圖形，避免細節繁瑣\n    - 圖形美觀\n    \n## ggplot2的基本架構\n- 資料 (data) 和映射 (mapping)\n- 幾何對象 (geometric)\n- 座標尺度 (scale)\n- 統計轉換 (statistics)\n- 座標系統 (coordinante)\n- 圖層 (layer)\n- 刻面 (facet)\n- 主題 (theme)\n\n## ggplot2的基本架構 {.smaller}\n\n<center>`r fig('ggplot.jpeg', 50)`</center>\n\n取自 <http://goo.gl/Odt2Rs/>\n\n## 基本語法\n```{r echo=TRUE, eval=FALSE}\nggplot(data=..., aes(x=..., y=...)) + geom_xxx(...) +\n  stat_xxx(...) + facet_xxx(...) + ...\n```\n- `ggplot` 描述 data 從哪來\n- `aes` 描述圖上的元素跟 data 之類的對應關係\n- `geom_xxx` 描述要畫圖的類型及相關調整的參數\n常用的類型諸如：`geom_bar`, `geom_points`, `geom_line` …\n\n### 注意\n使用 `data.frame` 儲存資料 (不可以丟 `matrix` 物件)\n使用 `long format` (利用`reshape2`套件將資料轉換成 1 row = 1 observation)\n\n\n## 質化 v.s. 量化：繪圖之前的整理資料\n\n### 信義區各站點在\"2015-02\"的平均降雨量\n\n```{r ubike.site.rainfall1, echo = TRUE, cache=TRUE, dependson=\"c.ubike\"}\n# grepl(\"要搜尋的字串\", x, fixed = TRUE)\nx1.1 <- grepl(\"2015-02\", ubike[[\"日期\"]], fixed = TRUE)\nx1.2 <- ubike[[\"場站區域\"]] == \"信義區\"\nx2 <- group_by(ubike[x1.1,], 場站名稱)\nx3 <- summarise(x2, 平均降雨量 = mean(降雨量))\n\nx3 <- filter(ubike, grepl(\"2015-02\", 日期, fixed = TRUE), \n             場站區域 == \"信義區\") %>%\n  group_by(場站名稱) %>% summarise(平均降雨量=mean(降雨量))\n```\n\n## 質化 v.s. 量化：barchart\n\n```{r ubike.site.rainfall2, depends = \"ubike.site.rainfall1\", echo=TRUE, fig.height = 5, results = \"hide\", warning=FALSE, fig.show='hide'}\nthm <- theme(text=element_text(size=18)) + theme_gray(base_family = \"STHeiti\")\nlas2 <- theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\nggplot(x3) +\n  geom_bar(aes(x = 場站名稱, y = 平均降雨量), stat = \"identity\") +\n  thm + las2\n```\n\n## 質化 v.s. 量化：boxplot \n\n```{r ubike.site.rainfall3, depends = \"c.ubike\", echo = TRUE, eval = FALSE}\nx1.1 <- grepl(\"2015-02\", ubike[[\"日期\"]], fixed = TRUE)\nx1.2 <- ubike[[\"場站區域\"]] == \"信義區\"\nx2 <- group_by(ubike[x1.1,], 場站名稱)\n# x3 <- summarise(x2, 平均降雨量 = mean(降雨量))\n\nx3 <- filter(ubike, grepl(\"2015-02\", 日期, fixed = TRUE), \n             場站區域 == \"信義區\") # %>%\n#  group_by(場站名稱) %>% summarise(平均降雨量=mean(降雨量))\n\nggplot(x3) +\n  geom_boxplot(aes(x = 場站名稱, y = 降雨量)) +\n  thm + las2\n\n```\n\n## 量化 v.s. 量化：繪圖之前的整理資料\n\n### 信義區各站點在\"2015-02\"的平均溼度 vs. 平均雨量\n\n```{r ubike.site.wet.rainfall1, echo = TRUE, cache=TRUE, dependson=\"c.ubike\"}\n# grepl(\"要搜尋的字串\", x, fixed = TRUE)\nx1.1 <- grepl(\"2015-02\", ubike[[\"日期\"]], fixed = TRUE)\nx1.2 <- ubike[[\"場站區域\"]] == \"信義區\"\nx2 <- group_by(ubike[x1.1,], 場站名稱)\nx3 <- summarise(x2, 平均降雨量 = mean(降雨量), 平均溼度 = mean(溼度))\n\nx3 <- filter(ubike, grepl(\"2015-02\", 日期, fixed = TRUE), \n             場站區域 == \"信義區\") %>%\n  group_by(場站名稱) %>% summarise(平均降雨量 = mean(降雨量), 平均溼度 = mean(溼度))\n```\n\n## 量化 v.s. 量化：Scatter Plot\n\n- 原因在x軸，結果在y軸\n\n```{r ubike.site.wet.rainfall2, echo = TRUE, dependson=\"ubike.site.wet.rainfall1\", fig.height=5, results = \"hide\", warning=FALSE, fig.show='hide'}\nggplot(x3) +\n  geom_point(aes(x = 平均溼度, y = 平均降雨量)) +\n  thm + las2\n```\n\n## 量化 v.s. 量化：Grouped Scatter Plot\n\n```{r ubike.site.wet.rainfall3, echo = TRUE, dependson=\"ubike.site.wet.rainfall1\", fig.height=5, results = \"hide\", warning=FALSE, fig.show='hide'}\nggplot(x3) +\n  geom_point(aes(x = 平均溼度, y = 平均降雨量, colour = 場站名稱)) +\n  thm + las2\n```\n\n## 相關資源\n- [官方文件](http://docs.ggplot2.org/current/index.html)\n- [Cookbook for R](http://www.cookbook-r.com/Graphs/)\n- [R Visualization Using ggplot2](http://blog.liang2.tw/2014-ggplot2-intro/)\n- [使用ggplot2画图](http://wenku.baidu.com/view/f27aeb17cc7931b765ce150f.html)\n- [2D視覺化進階 GGPLOT](http://molecular-service-science.com/2013/11/r-ggplot-tutorial-1/)\n- [ggplot2 cheat sheet](http://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf)\n\n# 圖表的輸出\n## 輸出圖片\n\n- Rstudio UI\n- `savePlot`\n- `bmp`、`png`、`jpeg`或`tiff`\n- `ggsave`\n\n## 輸出表格\n\n- `write.csv`\n- `xtable`套件\n\n# 總結\n\n## 本週目標\n\n### 環境設定\n\n- 建立可以使用R 的環境\n- 了解R 的使用界面\n\n### 學習R 語言\n\n- 透過實際的範例學習R 語言\n    - 讀取資料\n    - 選取資料\n    - 敘述統計量與視覺化\n- 利用實例來傳授學習的心法\n\n## 掌握心法後，如何自行利用R 解決問題\n\n- 了解自己的需求\n- 詢問關鍵字與函數\n    - 歡迎來信 <johnson@dsp.im>、<wush978@gmail.com> 或其他教師\n    - 多多交流\n        - [Data Science HC](https://www.facebook.com/DataScienceHC)\n        - [Taiwan R User Group](http://www.meetup.com/Taiwan-R)，mailing list: <Taiwan-useR-Group-list@meetup.com>\n        - ptt R_Language版\n        - [R軟體使用者論壇](https://groups.google.com/forum/#!forum/taiwanruser)\n    - `sos`套件，請見Demo\n\n\n## 你喜歡R 嗎？\n\n- R 是由一群來自世界上的志工貢獻而成的\n- 你覺得R 有不好用的地方嗎？\n    - 歡迎聯絡我，讓我們一起來貢獻，改進R 的使用體驗\n\n<img src=\"img/Rlogo.jpg\" width=\"225\" height=\"171\"/>",
    "created" : 1465022204364.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1187947841",
    "id" : "E521C8BC",
    "lastKnownWriteTime" : 1466508916,
    "last_content_update" : 1466508916151,
    "path" : "~/Downloads/EDA-R-gh-pages/index.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}